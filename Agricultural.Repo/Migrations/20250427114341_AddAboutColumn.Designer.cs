// <auto-generated />
using Agricultural.Repo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agricultural.Repo.Migrations
{
    [DbContext(typeof(PlanetContext))]
    [Migration("20250427114341_AddAboutColumn")]
    partial class AddAboutColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Agricultural.Core.Models.PlantAdditionalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlantAdditionalData");
                });

            modelBuilder.Entity("Agricultural.Core.Models.PlantImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("PlantsInfoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlantsInfoId");

                    b.ToTable("PlantImages", (string)null);
                });

            modelBuilder.Entity("Agricultural.Core.Models.PlantPrediction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Analysis_Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlantPrediction");
                });

            modelBuilder.Entity("Agricultural.Core.Models.PlantResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BotResponse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PlantResponse");
                });

            modelBuilder.Entity("Agricultural.Core.Models.PlantsInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CareLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Edibility")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Flowering")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAirPurifying")
                        .HasColumnType("boolean");

                    b.Property<bool>("Medicinal")
                        .HasColumnType("boolean");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("PlantInfos", (string)null);
                });

            modelBuilder.Entity("Agricultural.Core.Models.Uploaded_Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UploadedImages");
                });

            modelBuilder.Entity("Agricultural.Core.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Agricultural.Core.Models.PlantImages", b =>
                {
                    b.HasOne("Agricultural.Core.Models.PlantsInfo", "PlantsInfo")
                        .WithMany("PlantImages")
                        .HasForeignKey("PlantsInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlantsInfo");
                });

            modelBuilder.Entity("Agricultural.Core.Models.PlantsInfo", b =>
                {
                    b.OwnsOne("Agricultural.Core.Models.PlantDetails", "Details", b1 =>
                        {
                            b1.Property<int>("PlantsInfoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Fertilizing")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Pests")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Repotting")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Sunlight")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Temperature")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Water")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("PlantsInfoId");

                            b1.ToTable("PlantInfos");

                            b1.WithOwner()
                                .HasForeignKey("PlantsInfoId");
                        });

                    b.Navigation("Details")
                        .IsRequired();
                });

            modelBuilder.Entity("Agricultural.Core.Models.PlantsInfo", b =>
                {
                    b.Navigation("PlantImages");
                });
#pragma warning restore 612, 618
        }
    }
}
